<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gaoqi.rc.dao.RcQuartzJobMapper" >
  <resultMap id="BaseResultMap" type="com.gaoqi.rc.model.RcQuartzJob" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="task_group" property="taskGroup" jdbcType="VARCHAR" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="job_object" property="jobObject" jdbcType="VARCHAR" />
    <result column="job_method" property="jobMethod" jdbcType="VARCHAR" />
    <result column="is_concurrent" property="isConcurrent" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.gaoqi.rc.model.RcQuartzJob" extends="BaseResultMap" >
    <result column="extends_json" property="extendsJson" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, task_group, task_name, job_object, job_method, is_concurrent, user_id, 
    description, status, create_time
  </sql>
  <sql id="Blob_Column_List" >
    extends_json
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.gaoqi.rc.model.RcQuartzJobCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rc_quartz_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gaoqi.rc.model.RcQuartzJobCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rc_quartz_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rc_quartz_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rc_quartz_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gaoqi.rc.model.RcQuartzJobCriteria" >
    delete from rc_quartz_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gaoqi.rc.model.RcQuartzJob" useGeneratedKeys="true" keyProperty="id">
    insert into rc_quartz_job (id, name, task_group, 
      task_name, job_object, job_method, 
      is_concurrent, user_id, description, 
      status, create_time, extends_json
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{taskGroup,jdbcType=VARCHAR}, 
      #{taskName,jdbcType=VARCHAR}, #{jobObject,jdbcType=VARCHAR}, #{jobMethod,jdbcType=VARCHAR}, 
      #{isConcurrent,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{extendsJson,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gaoqi.rc.model.RcQuartzJob" >
    insert into rc_quartz_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="taskGroup != null" >
        task_group,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="jobObject != null" >
        job_object,
      </if>
      <if test="jobMethod != null" >
        job_method,
      </if>
      <if test="isConcurrent != null" >
        is_concurrent,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="extendsJson != null" >
        extends_json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="taskGroup != null" >
        #{taskGroup,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="jobObject != null" >
        #{jobObject,jdbcType=VARCHAR},
      </if>
      <if test="jobMethod != null" >
        #{jobMethod,jdbcType=VARCHAR},
      </if>
      <if test="isConcurrent != null" >
        #{isConcurrent,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extendsJson != null" >
        #{extendsJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gaoqi.rc.model.RcQuartzJobCriteria" resultType="java.lang.Integer" >
    select count(*) from rc_quartz_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rc_quartz_job
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.taskGroup != null" >
        task_group = #{record.taskGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null" >
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobObject != null" >
        job_object = #{record.jobObject,jdbcType=VARCHAR},
      </if>
      <if test="record.jobMethod != null" >
        job_method = #{record.jobMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.isConcurrent != null" >
        is_concurrent = #{record.isConcurrent,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.extendsJson != null" >
        extends_json = #{record.extendsJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update rc_quartz_job
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      task_group = #{record.taskGroup,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      job_object = #{record.jobObject,jdbcType=VARCHAR},
      job_method = #{record.jobMethod,jdbcType=VARCHAR},
      is_concurrent = #{record.isConcurrent,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      extends_json = #{record.extendsJson,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rc_quartz_job
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      task_group = #{record.taskGroup,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      job_object = #{record.jobObject,jdbcType=VARCHAR},
      job_method = #{record.jobMethod,jdbcType=VARCHAR},
      is_concurrent = #{record.isConcurrent,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gaoqi.rc.model.RcQuartzJob" >
    update rc_quartz_job
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="taskGroup != null" >
        task_group = #{taskGroup,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="jobObject != null" >
        job_object = #{jobObject,jdbcType=VARCHAR},
      </if>
      <if test="jobMethod != null" >
        job_method = #{jobMethod,jdbcType=VARCHAR},
      </if>
      <if test="isConcurrent != null" >
        is_concurrent = #{isConcurrent,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="extendsJson != null" >
        extends_json = #{extendsJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gaoqi.rc.model.RcQuartzJob" >
    update rc_quartz_job
    set name = #{name,jdbcType=VARCHAR},
      task_group = #{taskGroup,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      job_object = #{jobObject,jdbcType=VARCHAR},
      job_method = #{jobMethod,jdbcType=VARCHAR},
      is_concurrent = #{isConcurrent,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      extends_json = #{extendsJson,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gaoqi.rc.model.RcQuartzJob" >
    update rc_quartz_job
    set name = #{name,jdbcType=VARCHAR},
      task_group = #{taskGroup,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      job_object = #{jobObject,jdbcType=VARCHAR},
      job_method = #{jobMethod,jdbcType=VARCHAR},
      is_concurrent = #{isConcurrent,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.gaoqi.rc.model.RcQuartzJobCriteria" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rc_quartz_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.gaoqi.rc.model.RcQuartzJobCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rc_quartz_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>