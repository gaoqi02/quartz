<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gaoqi.rc.dao.RcQuartzScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.gaoqi.rc.model.RcQuartzSchedule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="is_repeat" property="isRepeat" jdbcType="TINYINT" />
    <result column="repeat_times" property="repeatTimes" jdbcType="INTEGER" />
    <result column="repeat_seconds" property="repeatSeconds" jdbcType="INTEGER" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="next_time" property="nextTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_id, create_time, state, start_time, is_repeat, repeat_times, repeat_seconds, 
    end_time, next_time, description, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gaoqi.rc.model.RcQuartzScheduleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rc_quartz_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from rc_quartz_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from rc_quartz_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gaoqi.rc.model.RcQuartzScheduleCriteria" >
    delete from rc_quartz_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gaoqi.rc.model.RcQuartzSchedule" useGeneratedKeys="true" keyProperty="id" >
    insert into rc_quartz_schedule (id, job_id, create_time, 
      state, start_time, is_repeat, 
      repeat_times, repeat_seconds, end_time, 
      next_time, description, status
      )
    values (#{id,jdbcType=INTEGER}, #{jobId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP}, #{isRepeat,jdbcType=TINYINT}, 
      #{repeatTimes,jdbcType=INTEGER}, #{repeatSeconds,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, 
      #{nextTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gaoqi.rc.model.RcQuartzSchedule" >
    insert into rc_quartz_schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="isRepeat != null" >
        is_repeat,
      </if>
      <if test="repeatTimes != null" >
        repeat_times,
      </if>
      <if test="repeatSeconds != null" >
        repeat_seconds,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="nextTime != null" >
        next_time,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRepeat != null" >
        #{isRepeat,jdbcType=TINYINT},
      </if>
      <if test="repeatTimes != null" >
        #{repeatTimes,jdbcType=INTEGER},
      </if>
      <if test="repeatSeconds != null" >
        #{repeatSeconds,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null" >
        #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gaoqi.rc.model.RcQuartzScheduleCriteria" resultType="java.lang.Integer" >
    select count(*) from rc_quartz_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rc_quartz_schedule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isRepeat != null" >
        is_repeat = #{record.isRepeat,jdbcType=TINYINT},
      </if>
      <if test="record.repeatTimes != null" >
        repeat_times = #{record.repeatTimes,jdbcType=INTEGER},
      </if>
      <if test="record.repeatSeconds != null" >
        repeat_seconds = #{record.repeatSeconds,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nextTime != null" >
        next_time = #{record.nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rc_quartz_schedule
    set id = #{record.id,jdbcType=INTEGER},
      job_id = #{record.jobId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      is_repeat = #{record.isRepeat,jdbcType=TINYINT},
      repeat_times = #{record.repeatTimes,jdbcType=INTEGER},
      repeat_seconds = #{record.repeatSeconds,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      next_time = #{record.nextTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gaoqi.rc.model.RcQuartzSchedule" >
    update rc_quartz_schedule
    <set >
      <if test="jobId != null" >
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRepeat != null" >
        is_repeat = #{isRepeat,jdbcType=TINYINT},
      </if>
      <if test="repeatTimes != null" >
        repeat_times = #{repeatTimes,jdbcType=INTEGER},
      </if>
      <if test="repeatSeconds != null" >
        repeat_seconds = #{repeatSeconds,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null" >
        next_time = #{nextTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gaoqi.rc.model.RcQuartzSchedule" >
    update rc_quartz_schedule
    set job_id = #{jobId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      is_repeat = #{isRepeat,jdbcType=TINYINT},
      repeat_times = #{repeatTimes,jdbcType=INTEGER},
      repeat_seconds = #{repeatSeconds,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      next_time = #{nextTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.gaoqi.rc.model.RcQuartzScheduleCriteria" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rc_quartz_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <cache />
</mapper>